name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DO_NOT_TRACK: 1
  DAGGER_NO_NAG: 1
  # TODO: Use the latest localnet image once it can build with the latest IPC code
  LOCALNET_IMAGE: "textile/recall-localnet:sha-dc4da8c-3e80bf0"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
      - name: Build
        run: make build

      - name: Run tests
        uses: dagger/dagger-for-github@8.0.0
        with:
          version: '0.18.2'
          workdir: 'dagger'
          verb: call
          module: ci
          args: test --source ../ --localnet-image "$LOCALNET_IMAGE" --docker-username "$DOCKER_USERNAME" --docker-password env://DOCKER_PASSWORD 2>&1 |  grep -vi -E "resolve|containerd|libnetwork|client|daemon|checkpoint|task|^$"
          dagger-flags: '--progress plain'

      - name: Run linter
        run: make lint

      - name: Generate documentation
        run: make doc
